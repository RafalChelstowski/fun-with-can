/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube162: THREE.Mesh
    Cube162_1: THREE.Mesh
    cupboard: THREE.Mesh
  }
  materials: {
    elementsMaterial: THREE.MeshStandardMaterial
    woodMaterial: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/cupboard.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-0.31, 0.43, -3.92]}>
        <mesh geometry={nodes.Cube162.geometry} material={materials.elementsMaterial} />
        <mesh geometry={nodes.Cube162_1.geometry} material={materials.woodMaterial} />
      </group>
      <mesh geometry={nodes.cupboard.geometry} material={materials.woodMaterial} position={[3.08, 1.48, -4.16]} />
    </group>
  )
}

useGLTF.preload('/cupboard.gltf')
