/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    textured_output: THREE.Mesh
    c1: THREE.Mesh
    c2: THREE.Mesh
    c3: THREE.Mesh
    c4: THREE.Mesh
    k1: THREE.Mesh
    k2: THREE.Mesh
    k3: THREE.Mesh
  }
  materials: {
    ['material_0.002']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/kitchen.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.textured_output.geometry} material={materials['material_0.002']} />
      <mesh geometry={nodes.c1.geometry} material={nodes.c1.material} position={[1.39, 0.66, 0.62]} scale={0.71} />
      <mesh geometry={nodes.c2.geometry} material={nodes.c2.material} />
      <mesh geometry={nodes.c3.geometry} material={nodes.c3.material} />
      <mesh geometry={nodes.c4.geometry} material={nodes.c4.material} />
      <mesh geometry={nodes.k1.geometry} material={nodes.k1.material} rotation={[0, -0.37, 0]} />
      <mesh geometry={nodes.k2.geometry} material={nodes.k2.material} rotation={[0, 1.2, 0]} />
      <mesh geometry={nodes.k3.geometry} material={nodes.k3.material} rotation={[-Math.PI, 0.37, -Math.PI]} />
    </group>
  )
}

useGLTF.preload('/kitchen.gltf')
